package tool;

import javax.mail.*;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;
import java.time.LocalDateTime;
import java.util.Properties;
import java.util.UUID;

public class EmailService {
    private final int LIMIT_MINUTES = 10; // Th·ªùi h·∫°n token
    private final String from = "vuthienkhiem2005@gmail.com";
    private final String password = "wgdj tgxv azcf ktxu"; // app password c·ªßa Gmail (16 k√Ω t·ª±)

    // Sinh token random
    public String generateToken() {
        return UUID.randomUUID().toString();
    }

    // Th·ªùi gian h·∫øt h·∫°n
    public LocalDateTime expireDateTime() {
        return LocalDateTime.now().plusMinutes(LIMIT_MINUTES);
    }

    // Ki·ªÉm tra h·∫øt h·∫°n
    public boolean isExpireTime(LocalDateTime time) {
        return LocalDateTime.now().isAfter(time);
    }

    // G·ª≠i email reset m·∫≠t kh·∫©u
    public void sendEmail(String to, String link, String name) {
        try {
            Properties props = new Properties();
            props.put("mail.smtp.host", "smtp.gmail.com");
            props.put("mail.smtp.port", "587");
            props.put("mail.smtp.auth", "true");
            props.put("mail.smtp.starttls.enable", "true"); // s·ª≠a l·ªói ch√≠nh t·∫£ ·ªü ƒë√¢y
props.put("mail.smtp.ssl.protocols", "TLSv1.2");
            // Authenticator
            Authenticator auth = new Authenticator() {
                @Override
                protected PasswordAuthentication getPasswordAuthentication() {
                    return new PasswordAuthentication(from, password);
                }
            };

            Session session = Session.getInstance(props, auth);

            // So·∫°n mail
            MimeMessage msg = new MimeMessage(session);
            msg.setFrom(new InternetAddress(from, "Support Team")); // hi·ªÉn th·ªã t√™n ng∆∞·ªùi g·ª≠i
            msg.setRecipient(Message.RecipientType.TO, new InternetAddress(to));
            msg.setSubject("Y√™u c·∫ßu ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u");
            
            String htmlContent = "<h3>Xin ch√†o " + name + ",</h3>"
                    + "<p>B·∫°n v·ª´a y√™u c·∫ßu ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u.</p>"
                    + "<p>Nh·∫•n v√†o link b√™n d∆∞·ªõi ƒë·ªÉ ƒë·ªïi m·∫≠t kh·∫©u (hi·ªáu l·ª±c 10 ph√∫t):</p>"
                    + "<a href='" + link + "'>ƒê·ªïi m·∫≠t kh·∫©u</a>"
                    + "<br><br><p>N·∫øu kh√¥ng ph·∫£i b·∫°n y√™u c·∫ßu, vui l√≤ng b·ªè qua email n√†y.</p>";
            
            msg.setContent(htmlContent, "text/html; charset=UTF-8");

            // G·ª≠i mail
            Transport.send(msg);

            System.out.println("Email ƒë√£ ƒë∆∞·ª£c g·ª≠i th√†nh c√¥ng t·ªõi: " + to);

        } catch (Exception e) {
            e.printStackTrace();
        }
    }
      public void sendEmailToUser(String to,String response, String subject) {
        try {
            Properties props = new Properties();
            props.put("mail.smtp.host", "smtp.gmail.com");
            props.put("mail.smtp.port", "587");
            props.put("mail.smtp.auth", "true");
            props.put("mail.smtp.starttls.enable", "true"); // s·ª≠a l·ªói ch√≠nh t·∫£ ·ªü ƒë√¢y
props.put("mail.smtp.ssl.protocols", "TLSv1.2");
            // Authenticator
            Authenticator auth = new Authenticator() {
                @Override
                protected PasswordAuthentication getPasswordAuthentication() {
                    return new PasswordAuthentication(from, password);
                }
            };

            Session session = Session.getInstance(props, auth);

            // So·∫°n mail
            MimeMessage msg = new MimeMessage(session);
            msg.setFrom(new InternetAddress(from, "Support Team")); // hi·ªÉn th·ªã t√™n ng∆∞·ªùi g·ª≠i
            msg.setRecipient(Message.RecipientType.TO, new InternetAddress(to));
            msg.setSubject("Tr·∫£ l·ªùi feedback");
            
            String htmlContent = "<div style='font-family: Arial, sans-serif; font-size: 14px;'>"
                + "<h3>üì¨ C√≥ ph·∫£n h·ªìi m·ªõi g·ª≠i t·ª´ admin </h3>"
                + "<p><b>Ch·ªß ƒë·ªÅ:</b> " + subject + "</p>"
                + "<p><b>N·ªôi dung:</b><br>" + response + "</p>"
                + "<hr>"
                + "<p style='font-size:12px;color:gray;'>Email n√†y ƒë∆∞·ª£c g·ª≠i t·ª± ƒë·ªông t·ª´ h·ªá th·ªëng Feedback. "
                + "Vui l√≤ng kh√¥ng tr·∫£ l·ªùi email n√†y.</p>"
                + "</div>";

            msg.setContent(htmlContent, "text/html; charset=UTF-8");

            // G·ª≠i mail
            Transport.send(msg);

            System.out.println("Email ƒë√£ ƒë∆∞·ª£c g·ª≠i th√†nh c√¥ng t·ªõi: " + to);

        } catch (Exception e) {
            e.printStackTrace();
        }
    }
  public void sendFeedbackToAdmin(String adminEmail, String senderName, String subject, String content) {
    try {
        Properties props = new Properties();
        props.put("mail.smtp.host", "smtp.gmail.com");
        props.put("mail.smtp.port", "587");
        props.put("mail.smtp.auth", "true");
        props.put("mail.smtp.starttls.enable", "true");
        props.put("mail.smtp.ssl.protocols", "TLSv1.2");

        // ƒêƒÉng nh·∫≠p v√†o t√†i kho·∫£n g·ª≠i mail
        Authenticator auth = new Authenticator() {
            @Override
            protected PasswordAuthentication getPasswordAuthentication() {
                return new PasswordAuthentication(from, password);
            }
        };

        Session session = Session.getInstance(props, auth);

        // So·∫°n email
        MimeMessage msg = new MimeMessage(session);
        msg.setFrom(new InternetAddress(from, senderName)); // hi·ªÉn th·ªã t√™n ng∆∞·ªùi g·ª≠i
        msg.setRecipient(Message.RecipientType.TO, new InternetAddress(adminEmail));
        msg.setSubject("üì© Ph·∫£n h·ªìi m·ªõi t·ª´ ng∆∞·ªùi d√πng: " + senderName, "UTF-8");

        String htmlContent = "<div style='font-family: Arial, sans-serif; font-size: 14px;'>"
                + "<h3>üì¨ C√≥ ph·∫£n h·ªìi m·ªõi g·ª≠i t·ª´ ng∆∞·ªùi d√πng <span style='color:#0d6efd;'>" + senderName + "</span></h3>"
                + "<p><b>Ch·ªß ƒë·ªÅ:</b> " + subject + "</p>"
                + "<p><b>N·ªôi dung:</b><br>" + content + "</p>"
                + "<hr>"
                + "<p style='font-size:12px;color:gray;'>Email n√†y ƒë∆∞·ª£c g·ª≠i t·ª± ƒë·ªông t·ª´ h·ªá th·ªëng Feedback. "
                + "Vui l√≤ng kh√¥ng tr·∫£ l·ªùi email n√†y.</p>"
                + "</div>";

        msg.setContent(htmlContent, "text/html; charset=UTF-8");

        // G·ª≠i email
        Transport.send(msg);

        System.out.println("‚úÖ Feedback ƒë√£ ƒë∆∞·ª£c g·ª≠i ƒë·∫øn admin: " + adminEmail);

    } catch (Exception e) {
        e.printStackTrace();
    }
}
  public void sendFeedbackToAdminEmp(String adminEmail, String senderName, String subject, String content,String code,String service) {
    try {
        Properties props = new Properties();
        props.put("mail.smtp.host", "smtp.gmail.com");
        props.put("mail.smtp.port", "587");
        props.put("mail.smtp.auth", "true");
        props.put("mail.smtp.starttls.enable", "true");
        props.put("mail.smtp.ssl.protocols", "TLSv1.2");

        // ƒêƒÉng nh·∫≠p v√†o t√†i kho·∫£n g·ª≠i mail
        Authenticator auth = new Authenticator() {
            @Override
            protected PasswordAuthentication getPasswordAuthentication() {
                return new PasswordAuthentication(from, password);
            }
        };

        Session session = Session.getInstance(props, auth);

        // So·∫°n email
        MimeMessage msg = new MimeMessage(session);
        msg.setFrom(new InternetAddress(from, senderName)); // hi·ªÉn th·ªã t√™n ng∆∞·ªùi g·ª≠i
        msg.setRecipient(Message.RecipientType.TO, new InternetAddress(adminEmail));
        msg.setSubject("üì© Ph·∫£n h·ªìi m·ªõi t·ª´ ng∆∞·ªùi d√πng: " + senderName, "UTF-8");

        String htmlContent = "<div style='font-family: Arial, sans-serif; font-size: 14px;'>"
                + "<h3>üì¨ C√≥ ph·∫£n h·ªìi m·ªõi g·ª≠i t·ª´ ng∆∞·ªùi d√πng <span style='color:#0d6efd;'>" + senderName + "</span></h3>"
                + "<p><b>Ch·ªß ƒë·ªÅ:</b> " + subject + "</p>"
                + "<p>" + service + "</p>"
                + "<p>" + code + "</p>"
                + "<p><b>N·ªôi dung:</b><br>" + content + "</p>"
                + "<hr>"
                + "<p style='font-size:12px;color:gray;'>Email n√†y ƒë∆∞·ª£c g·ª≠i t·ª± ƒë·ªông t·ª´ h·ªá th·ªëng Feedback. "
                + "Vui l√≤ng kh√¥ng tr·∫£ l·ªùi email n√†y.</p>"
                + "</div>";

        msg.setContent(htmlContent, "text/html; charset=UTF-8");

        // G·ª≠i email
        Transport.send(msg);

        System.out.println("‚úÖ Feedback ƒë√£ ƒë∆∞·ª£c g·ª≠i ƒë·∫øn admin: " + adminEmail);

    } catch (Exception e) {
        e.printStackTrace();
    }
}


}
